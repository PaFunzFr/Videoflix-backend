services:

  db:
    image: postgres:latest
    container_name: videoflix_database
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: videoflix_redis
    volumes:
      - redis_data:/data

  web: # backend
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file: .env
    container_name: videoflix_backend

    volumes:
      - .:/app
      - ./media:/app/media
      - videoflix_static:/app/static
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
      - redis

  worker: # RQ Worker
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: django_worker
    command: python manage.py rqworker default
    volumes:
      - .:/app
      - ./media:/app/media
    env_file: .env
    depends_on:
      - redis
    restart: always

  test:
    build:       
      context: .
      dockerfile: backend.Dockerfile
    entrypoint: "" #do not run entrypoint.sh
    command: pytest --cov=. --cov-report=term-missing
    environment:
      - PYTHONPATH=/app
    depends_on:
      - db
    volumes:
      - .:/app
    env_file: .env

volumes:
  videoflix_static:
  postgres_data:
  redis_data:
